Харківський університет радіоелектроніки
Факультет комп'ютерних наук
Кафедра програмної інженерії







ЗВІТ
до практичного заняття 2 з дисципліни
"Програмування під Android"
на тему "Файли розмітки Layout та методи Activity" 





Виконав ст. гр ПЗПІ-23-8
Козлов Сергій Олександрович


Перевірив 
ст. викладач кафедри ПІ
Сокорчук Ігор Петрович








Харків 2024

МЕТА
     Метою цієї роботи є вивчення основ роботи з XML-розміткою у середовищі Android Studio, створення базових макетів за допомогою різних типів Layout, ознайомлення з атрибутами елементів інтерфейсу та управління життєвим циклом Activity. Завдання полягає у засвоєнні основних принципів побудови інтерфейсу Android-додатків, вивченні методів життєвого циклу Activity та розумінні механізмів збереження стану під час зміни орієнтації екрана.

     ЗАВДАННЯ
     Завдання передбачає створення нового проєкту в Android Studio, використовуючи шаблон "Empty Activity". Після створення проєкту необхідно ознайомитися зі структурою, зокрема файлами activity_main.xml та MainActivity.java. Потрібно створити інтерфейс, використовуючи компоненти TextView, Button та ImageView, експериментуючи з атрибутами, такими як layout_width, layout_height, padding, margin, gravity та інші. Далі, застосувати LinearLayout для створення макету, що містить кнопки, розташовані одна під одною, використовуючи атрибут orientation для вертикальної орієнтації. Після цього слід створити макет за допомогою ConstraintLayout, розташувавши елементи з використанням обмежень (constraints). Необхідно реалізувати обробник подій для кнопки, додавши відповідний метод у клас MainActivity.java. У ході роботи слід дослідити методи життєвого циклу Activity, такі як onCreate(), onStart(), onResume(), onPause(), onStop(), onDestroy(). Для забезпечення збереження стану Activity при зміні орієнтації екрана потрібно використати методи onSaveInstanceState() та onRestoreInstanceState(), що дозволить зберігати та відновлювати стан застосунку.
     
ХІД РОБОТИ
     Для підготовки робочого середовища необхідно відкрити Android Studio та створити новий проєкт за шаблоном "Empty Activity". Основні файли проєкту: MainActivity.java, який містить основну логіку додатка, та activity_main.xml, що є XML-файлом розмітки головного екрана застосунку. У файлі activity_main.xml слід обрати LinearLayout як основний контейнер для компонентів інтерфейсу. Додається елементи TextView, Button та ImageView у файл activity_main.xml, встановлюються властивості для елементів: для TextView — текст, розмір шрифту та відступи (padding), для Button — текст, розміри (layout_width, layout_height) та відступи, а для ImageView — зображення з ресурсів drawable.
     Практика роботи з різними Layout передбачає використання LinearLayout з вертикальною орієнтацією (android=“vertical”) для розташування кнопок одна під одною. Створюється макет із використанням ConstraintLayout, де елементи розміщуються з урахуванням обмежень (constraints) для позиціонування відносно один одного. Використовуються атрибути margin, padding, gravity та layout_gravity для налаштування відступів і вирівнювання елементів.
У файлі MainActivity.java реалізовано методи життєвого циклу (onCreate(), onStart(), onResume(), onPause(), onStop(), onDestroy()) з логуванням у консолі (Log.d). Виконується збереження стану Activity при зміні орієнтації екрана за допомогою методів onSaveInstanceState() та onRestoreInstanceState() для збереження та відновлення стану.
     Для тестування та запуску проєкту застосовується емулятор, налаштований у середовищі Android Studio. При натисканні на кнопку відбувається зміна тексту TextView, що підтверджує коректність реалізації обробки подій. Зміни у стані екрана, такі як поворот, не впливають на дані в полях EditText відповідно, що підтверджує коректне збереження та відновлення стану за допомогою onSaveInstanceState().










     ВИСНОВКИ
     
     Посилання на відео в You_Tube: https://youtu.be/zuk01W-jla0
     
     У ході виконання практичного заняття було вивчено основи роботи з XML-розміткою у середовищі Android Studio, створено базові макети з використанням LinearLayout та ConstraintLayout, а також реалізовано обробник подій для кнопки. Досліджено життєвий цикл Activity та розроблено функціонал для збереження стану Activity при зміні орієнтації екрана.
     Отримані знання дозволяють глибше зрозуміти процес розробки інтерфейсу Android-додатків та управління станом додатка.

ВИКОРИСТАННІ ДЖЕРЕЛА

1. YouTube. " Як Зробити Android Додаток з Нуля" https://www.youtube.com/watch?v=p0tmWQIKk4g. 
2. Дата доступу: 7 жовтня 2024 року.
3. Національний університет радіоелектроніки. https://dl.nure.ua/
Дата доступу: 7 жовтня 2024 року.
4. Спільнота Stack Overflow. https://stackoverflow.com/
Дата доступу: 7 жовтня 2024 року.
5. YouTube. “Уроки Java з нуля” 
https://www.youtube.com/watch?v=iF7QpUA_KjE&list=PL7vq4D0vOpQbW4oply2GMQjVeYHNi05-I



























ДОДАТОК А

Розмітка з трьома кнопками

<LinearLayout
    android:id="@+id/linearLayout"
    android:layout_width="174dp"
    android:layout_height="171dp"
    android:gravity="center"
    android:orientation="vertical"
    app:layout_constraintBottom_toBottomOf="parent"
    app:layout_constraintEnd_toEndOf="parent"
    app:layout_constraintHorizontal_bias="0.497"
    app:layout_constraintStart_toStartOf="parent"
    app:layout_constraintTop_toBottomOf="@id/textView">

 
    <Button
        android:id="@+id/button1"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:backgroundTint="#DC3C3C"
        android:onClick="onButtonClick"
        android:text="Name"
        android:textStyle="bold" />

    <Button
        android:id="@+id/button2"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:backgroundTint="#DC3C3C"
        android:onClick="onButtonClick"
        android:text="Version"
        android:textStyle="bold" />

   
    <Button
        android:id="@+id/button3"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:backgroundTint="#DC3C3C"
        android:onClick="onButtonClick"
        android:text="Special"
        android:textStyle="bold" />
</LinearLayout>









































ДОДАТОК Б

Обробник події натискання кнопок

public class MainActivity extends AppCompatActivity {

    Button button1, button2,button3;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        button1 = findViewById(R.id.button1);
        button2 =findViewById(R.id.button2);
        button3 =findViewById(R.id.button3);

        button1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Toast.makeText(MainActivity.this, "Patron", Toast.LENGTH_SHORT).show();
            }
        });
        button2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Toast.makeText(MainActivity.this, "1.0", Toast.LENGTH_SHORT).show();

            }
        });
        button3.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Toast.makeText(MainActivity.this, "POWER", Toast.LENGTH_SHORT).show();
            }
        });

    }



    }
ДОДАТОК Г

FrameLayout з елементами

<FrameLayout
    android:id="@+id/frameLayout"
    android:layout_width="200dp"
    android:layout_height="200dp"
    app:layout_constraintBottom_toTopOf="@+id/textView"
    app:layout_constraintEnd_toEndOf="parent"
    app:layout_constraintStart_toStartOf="parent"
    app:layout_constraintTop_toTopOf="parent">

    
    <ImageView
        android:layout_width="match_parent"
        android:layout_height="180dp"
        android:src="@drawable/ic_launcher_background" />


    <ImageView
        android:layout_width="150dp"
        android:layout_height="150dp"
        android:layout_gravity="center"
        android:src="@drawable/ic_launcher_foreground" />

</FrameLayout>














ДОДАТОК Д

Функції виведення Activity повідомлень у лог

@Override
protected void onStart() {
    super.onStart();
    Log.d("Повідомлення", "onStart called");
}

@Override
protected void onResume() {
    super.onResume();
    Log.d("Повідомлення", "onResume called");
}

@Override
protected void onPause() {
    super.onPause();
    Log.d("Повідомлення", "onPause called");
}

@Override
protected void onStop() {
    super.onStop();
    Log.d("Повідомлення", "onStop called");
}

@Override
protected void onDestroy() {
    super.onDestroy();
    Log.d("Повідомлення", "onDestroy called");
}


     
     
     
     
     
     
     
ДОДАТОК Е
Методи onSaveInstanceState() і onRestoreInstanceState()

@Override
protected void onSaveInstanceState(Bundle outState) {
    super.onSaveInstanceState(outState);
    EditText editText = findViewById(R.id.editText);
    outState.putString("savedText", editText.getText().toString());
    Log.d("ПершаActivity", "onSaveInstanceState called");
}

@Override
protected void onRestoreInstanceState(Bundle savedInstanceState) {
    super.onRestoreInstanceState(savedInstanceState);
    Log.d("ПершаActivity", "onRestoreInstanceState called");
}

     
