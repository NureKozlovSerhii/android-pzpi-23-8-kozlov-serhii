Харківський університет радіоелектроніки
Факультет комп'ютерних наук
Кафедра програмної інженерії







ЗВІТ
до лабораторної роботи 1 з дисципліни
"Програмування під Android"
на тему "Створення мінімального Android застосунку" 





Виконав ст. гр ПЗПІ-23-8
Козлов Сергій Олександрович


Перевірив 
ст. викладач кафедри ПІ
Сокорчук Ігор Петрович








Харків 2024

МЕТА
     Метою цієї роботи є вивчення основ створення Android-застосунків, використання Android Studio для розробки інтерфейсу, реалізація методів життєвого циклу активностей та створення базового макету з використанням LinearLayout. Завдання передбачає засвоєння основ роботи з компонентами інтерфейсу та управління станом активності під час зміни її життєвого циклу.

     ЗАВДАННЯ
     Завдання передбачає встановлення Android Studio та створення мінімального Android-застосунку, який містить одну активність (Activity). В активності потрібно реалізувати базові методи життєвого циклу, такі як onCreate(), onStart(), onResume(), onPause(), onStop(), onRestart() та onDestroy(). При запуску застосунку у центрі екрану має з’являтися текст "Task 1". Для розмітки активності використовується LinearLayout.

ХІД РОБОТИ
     Для виконання роботи спочатку було створено новий проєкт у середовищі Android Studio, використовуючи шаблон "Empty Activity". Після створення проєкту було детально ознайомлено зі структурою проєкту, зокрема з файлами MainActivity.java та activity_main.xml. У файлі activity_main.xml був обраний компонент LinearLayout як основний контейнер для побудови інтерфейсу. Використовуючи цей контейнер, було додано елемент TextView, який розміщено по центру екрану з текстом "Task 1".
     У файлі MainActivity.java було реалізовано базові методи життєвого циклу активності, такі як onCreate(), onStart(), onResume(), onPause(), onStop(), onRestart() та onDestroy(). У кожному з методів були додані записи в лог для відслідковування послідовності викликів цих методів під час роботи застосунку. Це дало змогу зрозуміти, як активність поводиться в різних станах, наприклад, при запуску, переході у фоновий режим або при закритті.
     Для перевірки правильності реалізації та роботи застосунку було запущено емулятор, що дозволило переконатися, що інтерфейс відображається коректно та методи життєвого циклу виконуються у потрібному порядку. При тестуванні було перевірено зміну станів активності та роботу інтерфейсу під час зміни орієнтації екрану та зупинки застосунку.



     ВИСНОВКИ
     
     Посилання на відео в You_Tube: https://youtu.be/PJ4jOKSLzPU
     
     У ході виконання роботи було розроблено простий Android-застосунок з використанням шаблону "Empty Activity". Даний застосунок реалізує базові методи життєвого циклу активності, що дозволяє відслідковувати різні стани роботи програми та реагувати на зміну станів. Було створено інтерфейс із використанням компонування на основі LinearLayout, який забезпечує зручне розміщення елементів інтерфейсу на екрані.
     Особливу увагу було приділено розробці та дослідженню поведінки життєвого циклу активності, таких як onCreate(), onStart(), onResume(), onPause(), onStop(), onRestart() та onDestroy().  Це
     дозволило краще зрозуміти, як активність поводиться під час запуску, зупинки та зміни станів.
     Також було реалізовано простий інтерфейс користувача, який при запуску відображає напис "Task 1" у центрі екрану. Використання LinearLayout дозволило досягти гарного вирівнювання тексту на екрані, що забезпечує більш зручний та приємний для користувача дизайн. Застосунок був протестований на емуляторі Android Studio, що дозволило переконатися у правильній роботі всіх реалізованих методів та відображенні інтерфейсу.
      

ВИКОРИСТАННІ ДЖЕРЕЛА

1. YouTube. " Як Зробити Android Додаток з Нуля" https://www.youtube.com/watch?v=p0tmWQIKk4g. 
2. Дата доступу: 7 жовтня 2024 року.
3. Національний університет радіоелектроніки. https://dl.nure.ua/
Дата доступу: 7 жовтня 2024 року.
4. Спільнота Stack Overflow. https://stackoverflow.com/
Дата доступу: 7 жовтня 2024 року.
5. YouTube. “Уроки Java з нуля” 
https://www.youtube.com/watch?v=iF7QpUA_KjE&list=PL7vq4D0vOpQbW4oply2GMQjVeYHNi05-I


























ДОДАТОК А

Код activity_main.xml

01. <?xml version="1.0" encoding="utf-8"?>
02. <LinearLayout
03.     xmlns:android="http://schemas.android.com/apk/res/android"
04.     android:layout_width="match_parent"
05.     android:layout_height="match_parent"
06.     android:orientation="vertical"
07.     android:gravity="center"
08.     android:padding="16dp">
09.
10.     <TextView
11.         android:id="@+id/textView"
12.         android:layout_width="wrap_content"
13.         android:layout_height="wrap_content"
14.         android:lineSpacingExtra="34sp"
15.         android:text="Task 1"
16.         android:textColor="#FFFFFF"
17.         android:textSize="24sp" />
18. </LinearLayout>

















ДОДАТОК Б

Код MainActivity.java

1  package com.example.labtask1;
2  
3  import android.os.Bundle;
4  import android.util.Log;
5  import androidx.appcompat.app.AppCompatActivity;
6  
7  public class MainActivity extends AppCompatActivity {
8  
9      @Override
10     protected void onCreate(Bundle savedInstanceState) {
11         super.onCreate(savedInstanceState);
12         setContentView(R.layout.activity_main);
13         Log.d("ПершаActivity", "onCreate called");
14     }
15  
16     @Override
17     protected void onStart() {
18         super.onStart();
19         Log.d("ПершаActivity", "onStart called");
20     }
21  
22     @Override
23     protected void onResume() {
24         super.onResume();
25         Log.d("ПершаActivity", "onResume called");
26     }
27  
28     @Override
29     protected void onPause() {
30         super.onPause();
31         Log.d("ПершаActivity", "onPause called");
32     }
33  
34     @Override
35     protected void onStop() {
36         super.onStop();
37         Log.d("ПершаActivity", "onStop called");
38     }
39  
40     @Override
41     protected void onRestart() {
42         super.onRestart();
43         Log.d("ПершаActivity", "onRestart called");
44     }
45  
46     @Override
47     protected void onDestroy() {
48         super.onDestroy();
49         Log.d("ПершаActivity", "onDestroy called");
50     }
51 }
